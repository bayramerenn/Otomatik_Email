<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="navBarGroup1.ImageOptions.SmallImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oZ+gzaj/AcYb4aITdRdAAAAAAElFTkSuQmCC
</value>
  </data>
</root>